package Nov;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class prob2 {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int N = in.nextInt();
		int[] arr = new int[N];
		for(int i=0 ; i<N ; i++)
			arr[i] = in.nextInt();
		int X = in.nextInt();
		int Y = in.nextInt();
		int Z = in.nextInt();
		int res = solution(arr,X,Y,Z);
		System.out.println(res);
		in.close();
	}
	public static int solution (int[] C, int  X, int Y, int Z){
		int t=0,i=0,j=0;
		ArrayList<Integer> D = new ArrayList<Integer>(Arrays.asList(X,Y,Z));
		int[] count = new int[C.length];
		int[] arr = new int[3];
		ArrayList<Integer> al = new ArrayList<Integer>(Collections.nCopies(D.size(), 0));
		int Tw = 0;
		while(i<C.length){//CAR
			while(j<D.size()){//DISPENSER
				if(C[i] <= D.get(j)){
					int x = D.get(j);
					x-=C[i];
					D.set(j, x);
					al.set(j, C[i]+t);
					arr[j]=C[i]+t;
					i++;
					j++;
					Tw=Math.max(t, Tw);
					break;
				}
			    else
			    	count[i]++;
				j++;
			}//D
			if(i==C.length)
				return Tw;
			else if(count[i]>=D.size())
				return -1;
			else if(j<=D.size()){
				Arrays.sort(arr);
				int k=0;
				for(;k<arr.length;k++){
					if(D.get(al.indexOf(arr[k]))==0 || D.get(al.indexOf(arr[k]))<C[i]){continue;}
					else{
						j=al.indexOf(arr[k]);
						t=Math.max(t, arr[k]);
						for(int m=0;m<arr.length;m++)
							arr[m] = al.get(m);
						break;
					}		
				}//loop
				if(k==arr.length)
					return -1;
			}
		}//i	//end
		return Tw;
	}//end of Solution
}//end of class
